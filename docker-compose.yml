version: '2.2'

x-app: &app
  image: advanced:1.0.1
  build:
    context: .
    args:
      RUBY_VERSION: "${RUBY_VERSION}"
      PG_MAJOR: "${PG_MAJOR}"
      NODE_MAJOR: "${NODE_MAJOR}"
      YARN_VERSION: "${YARN_VERSION}"
      BUNDLER_VERSION: "${BUNDLER_VERSION}"
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/railsapp:cached
    - rails_cache:/railsapp/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/railsapp/node_modules
    - packs:/railsapp/public/packs
    - .dockerdev/.psqlrc:/root/.psqlrc:ro
    - .dockerdev/.bashrc:/root/.bashrc:ro
  environment:
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    WEB_CONCURRENCY: 1
    HISTFILE: /railsapp/log/.bash_history
    PSQL_HISTFILE: /railsapp/log/.psql_history
    EDITOR: vi
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'
      - '3002:3002'

  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '127.0.0.1:3000:3000'

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

  postgres:
    image: "postgres:${PG_MAJOR}"
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
      - '.dockerdev/init.sql:/docker-entrypoint-initdb.d/init.sql'
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: "redis:${REDIS_VERSION}-alpine"
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  webpacker:
    <<: *app
    command: bash -c "rm -rf /app/public/packs/* && bundle exec ./bin/webpack-dev-server"
    ports:
      - '3035:3035'
    volumes:
      - .:/railsapp:cached
      - bundle:/usr/local/bundle
      - node_modules:/railsapp/node_modules
      - packs:/railsapp/public/packs

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  rails_cache:
  packs:
